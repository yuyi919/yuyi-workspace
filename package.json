{
  "name": "yuyi919",
  "version": "0.0.0",
  "license": "MIT",
  "private": true,
  "scripts": {
    "dev:antv-plus2": "rush build:dev --to @yuyi919/vue-antv-plus2",
    "publish:with": "cross-env rush publish --apply --include-all --set-access-level public --publish --version-policy",
    "publish:shared": "pnpm publish:with shared",
    "workspace": "pnpm workspace:ts & pnpm workspace:types_node & pnpm workspace:heft-jest & pnpm workspace:rig & pnpm workspace:jest & pnpm workspace:ts-jest",
    "workspace:ts": "rush add --all --dev -p typescript@4.1.2",
    "workspace:types_node": "rush add --all --dev -p @types/node",
    "workspace:heft-jest": "rush add --all --dev -p @types/heft-jest",
    "workspace:rig": "rush add --all --dev -p @yuyi919/workspace-base-rig",
    "workspace:jest": "rush add --all --dev -p jest",
    "workspace:ts-jest": "rush add --all --dev -p ts-jest",
    "pack:server": "pnpm --filter ./apps/server pack:pkg",
    "pack:bot": "pnpm --filter ./apps/bot pack:pkg",
    "run:server": "@powershell -Command $env:NODE_CONFIG_ENV='global';\"./apps/server/pack/server\"",
    "run:bot": "@powershell -Command $env:NODE_CONFIG_ENV='global';\"./apps/bot/pack/bot-service\"",
    "run:bot2": "node ./apps/bot -c config/setting.yml --bot.master 919606952",
    "run:server2": "@powershell -Command $env:NODE_CONFIG_ENV='global';node apps/server",
    "docker": "docker-compose build",
    "docker:build": "docker-compose build",
    "docker:env": "docker-compose -f \"docker-compose.env.yml\" build",
    "docker:start": "docker run -d -p 8000:3000 --name test yuyi-next_main",
    "depends": "gulp --gulpfile scripts/depends.js --cwd .",
    "pub": "lerna publish --yes",
    "nx": "nx",
    "db:sync": "prisma migrate dev --name init --preview-feature",
    "db": "prisma generate",
    "start": "nx serve",
    "start:bot": "nx serve bot",
    "start:prod": "@powershell -Command $env:BOT_QQ=3091820139;node ./apps/bot/dist/main.js",
    "start:full": "yarn install && yarn nx run server:build:production && yarn start:prod",
    "clean": "rimraf **/.tsBuildInfo && rimraf packages/**/dist",
    "build": "nx build server --with-deps",
    "build:deps": "nx build internal-build-tools --with-deps && nx build shared --with-deps --skip-nx-cache",
    "dev": "nx run-many --target=dev --projects=nx-plugins-lerna,build-tools,shared --configuration=dev --parallel=true",
    "dev:add": "nx generate ./dist/packages/internal/nx-plugins/lerna:internal-nx-plugins-lerna",
    "dev:add:shared": "yarn dev:add --directory=\"shared\"",
    "test": "nx test",
    "lint": "nx workspace-lint && nx lint",
    "e2e": "nx e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "nx migrate latest",
    "workspace-generator": "nx workspace-generator",
    "dep-graph": "nx dep-graph",
    "prepare": "ts-patch install -s",
    "help": "nx help"
  },
  "prisma": {
    "schema": "apps/prisma/schema.prisma"
  }
}
