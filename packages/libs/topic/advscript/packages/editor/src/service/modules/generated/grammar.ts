/******************************************************************************
 * This file was generated by langium-cli 0.2.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/

import { loadGrammar, Grammar } from "langium";

let loaded: Grammar | undefined;
export const grammar = (): Grammar =>
  loaded ||
  (loaded = loadGrammar(`{
  "$type": "Grammar",
  "usedGrammars": [],
  "hiddenTokens": [],
  "metamodelDeclarations": [],
  "rules": [
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Model",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "defines",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Define"
              }
            },
            "cardinality": "*",
            "elements": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "hellos",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Hello"
                  }
                },
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "contents",
                "operator": "+=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "Dialog"
                      },
                      "elements": []
                    },
                    {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "Echo"
                      }
                    }
                  ]
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "EOL"
                },
                "elements": []
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Define",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "CharacterDefine"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "OtherDefine"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "CharacterDefine",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "Characters"
            },
            "elements": []
          },
          {
            "$type": "Keyword",
            "value": ":"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Character"
              }
            },
            "cardinality": "+"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Character",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "elements": []
          },
          {
            "$type": "Keyword",
            "value": "-"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            }
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "AnyPlainText"
              }
            }
          },
          {
            "$type": "Assignment",
            "feature": "params",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Param"
              }
            },
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "OtherDefine",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "ID"
              }
            },
            "elements": []
          },
          {
            "$type": "Keyword",
            "value": ":"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            }
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "AnyPlainText"
              }
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Param",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "key",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "ID"
              }
            }
          },
          {
            "$type": "Keyword",
            "value": "="
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Literal"
              }
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Literal",
      "hiddenTokens": [],
      "type": "Literal",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "StringLiteral"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "NumberLiteral"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "StringLiteral",
      "hiddenTokens": [],
      "type": "Literal",
      "alternatives": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "Alternatives",
          "elements": [
            {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "STRING"
              },
              "elements": []
            },
            {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "AnyPlainText"
              }
            }
          ]
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "NumberLiteral",
      "hiddenTokens": [],
      "type": "Literal",
      "alternatives": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "INT"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Hello",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "Hello:",
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            }
          },
          {
            "$type": "Assignment",
            "feature": "person",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$refText": "Character"
              },
              "terminal": {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "QualifiedName"
                }
              }
            }
          },
          {
            "$type": "Keyword",
            "value": "!"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Dialog",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "AT"
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$refText": "Character"
              },
              "terminal": {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "QualifiedName"
                }
              }
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          },
          {
            "$type": "Assignment",
            "feature": "dialogs",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "DialogContent"
              }
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "DialogContent",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "contents",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "Echo"
          }
        },
        "cardinality": "*",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Echo",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "text",
            "operator": "+=",
            "terminal": {
              "$type": "Alternatives",
              "elements": [
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Template"
                  },
                  "elements": []
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Plain"
                  }
                }
              ]
            },
            "cardinality": "+",
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "QualifiedName",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "ID"
            },
            "elements": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ".",
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ID"
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Template",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "@[",
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$refText": "Character"
              },
              "terminal": {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "QualifiedName"
                }
              }
            }
          },
          {
            "$type": "Keyword",
            "value": "]"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Plain",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "content",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "PlainText"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "PlainText",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "+",
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "STRING"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "ID"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "INT"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "OTHER"
            },
            "elements": []
          },
          {
            "$type": "Keyword",
            "value": "!",
            "elements": []
          },
          {
            "$type": "Keyword",
            "value": ":",
            "elements": []
          }
        ],
        "cardinality": "+"
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "AnyPlainText",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "ID"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "OTHER"
            },
            "elements": []
          },
          {
            "$type": "Keyword",
            "value": "!",
            "elements": []
          },
          {
            "$type": "Keyword",
            "value": ":",
            "elements": []
          }
        ],
        "cardinality": "+"
      }
    },
    {
      "$type": "TerminalRule",
      "name": "WS",
      "terminal": {
        "$type": "RegexToken",
        "regex": "([ \\\\f\\\\t\\\\v\\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]+)",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "EOL",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\r?\\\\n",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "AT",
      "terminal": {
        "$type": "RegexToken",
        "regex": "(?!\\\\s)@",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "ID",
      "terminal": {
        "$type": "RegexToken",
        "regex": "[_a-zA-Z][\\\\w_]*",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "INT",
      "type": "number",
      "terminal": {
        "$type": "RegexToken",
        "regex": "[0-9]+\\\\b",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "STRING",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\"((\\\\\\\\.)|[^\\"])*\\"|'((\\\\\\\\.)|[^'])*'",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "OTHER",
      "terminal": {
        "$type": "RegexToken",
        "regex": "((?!@|\\\\/\\\\*|\\\\s)\\\\W|(?!person|hello)\\\\w)(((?!@)\\\\S)*?)",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "ML_COMMENT",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "SL_COMMENT",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/[^\\\\n\\\\r]*",
        "elements": []
      }
    }
  ],
  "name": "Advscript"
}`));
