/******************************************************************************
 * This file was generated by langium-cli 0.2.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/

import { loadGrammar, Grammar } from 'langium';

let loaded: Grammar | undefined;
export const grammar = (): Grammar => loaded || (loaded = loadGrammar(`{
  "$type": "Grammar",
  "usedGrammars": [],
  "hiddenTokens": [],
  "metamodelDeclarations": [],
  "rules": [
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Document",
      "hiddenTokens": [],
      "entry": true,
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "header",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "TitlePage"
              }
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "content",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "DocumentContents"
              }
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "TitlePage",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            },
            "cardinality": "*",
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "start",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Token_YAML"
              }
            },
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "defines",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Declare"
                  },
                  "elements": []
                },
                "cardinality": "+",
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "EOL"
                },
                "elements": []
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Assignment",
            "feature": "end",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Token_YAML"
              }
            }
          }
        ],
        "cardinality": "?"
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "YamlBlock",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "start",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Token_YAML"
              }
            },
            "elements": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "defines",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Declare"
                  },
                  "elements": []
                },
                "cardinality": "+",
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "EOL"
                },
                "elements": []
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Assignment",
            "feature": "end",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Token_YAML"
              }
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "DocumentContents",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "contents",
            "operator": "+=",
            "terminal": {
              "$type": "Alternatives",
              "elements": [
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "YamlBlock"
                  },
                  "elements": []
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "LogicStatment"
                  }
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "StoryBlock"
                  }
                }
              ]
            },
            "cardinality": "+",
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            },
            "elements": []
          }
        ],
        "cardinality": "*"
      }
    },
    {
      "$type": "TerminalRule",
      "name": "Token_YAML",
      "type": "string",
      "terminal": {
        "$type": "RegexToken",
        "regex": "---\\\\r?\\\\n",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "QualifiedName",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "+=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$refText": "Identifier"
              }
            },
            "cardinality": "+",
            "elements": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_P"
                },
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "name",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$refText": "Identifier"
                  }
                },
                "cardinality": "+"
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Identifier",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "text",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "ID"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "NameIdentifier",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "text",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "TextExpr"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Declare",
      "hiddenTokens": [],
      "type": "Declare",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "CharactersDeclare"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "MacroDeclare"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "OtherDeclare"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "DeclareKind",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "CharactersDeclareKind"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "MacrosDeclareKind"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "KeyedDeclareKind"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "CharactersDeclare",
      "hiddenTokens": [],
      "type": "Declare",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": "CharactersDeclare",
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "CharactersDeclareKind"
              }
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Colon"
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Character"
              }
            },
            "cardinality": "+"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Character",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_ListItem"
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            }
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "NameIdentifier"
              }
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Paren_L"
                }
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "modifiers",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Modifier"
                  }
                },
                "cardinality": "+"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "Token_Comma"
                    },
                    "elements": []
                  },
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "WS"
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "modifiers",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "Modifier"
                      }
                    },
                    "cardinality": "+"
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Paren_R"
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Param"
                  }
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Modifier",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "name",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "NameIdentifier"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "MacroDeclare",
      "hiddenTokens": [],
      "type": "Declare",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": "MacroDeclare",
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "MacrosDeclareKind"
              }
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Colon"
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Macro"
              }
            },
            "cardinality": "+"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Macro",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_ListItem"
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            }
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Identifier"
              }
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Paren_L"
                }
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "modifiers",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$refText": "NameIdentifier"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "TextExpr"
                    }
                  }
                },
                "cardinality": "+"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "Token_Comma"
                    },
                    "elements": []
                  },
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "WS"
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "modifiers",
                    "operator": "+=",
                    "terminal": {
                      "$type": "CrossReference",
                      "type": {
                        "$refText": "NameIdentifier"
                      },
                      "terminal": {
                        "$type": "RuleCall",
                        "arguments": [],
                        "rule": {
                          "$refText": "TextExpr"
                        }
                      }
                    },
                    "cardinality": "+"
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Paren_R"
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Param"
                  }
                },
                "cardinality": "+"
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Param",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Identifier"
              }
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "ParamInitial"
            },
            "cardinality": "?"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "MacroParam",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "ref",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$refText": "Param"
              },
              "terminal": {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ID"
                }
              }
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "ParamInitial"
            },
            "cardinality": "?"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "ParamInitial",
      "hiddenTokens": [],
      "fragment": true,
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Operator_Equal"
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "Alternatives",
              "elements": [
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "TextExpression"
                  },
                  "elements": []
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "TopExpression"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "TextExpression",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "TextContnet"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "TextContnet",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "OTHER"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ESC"
                },
                "elements": []
              }
            ]
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ID"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Escapse"
                },
                "elements": []
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "PlainTextExpression",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "PlainTextContnet"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "PlainTextContnet",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ID"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Escapse"
                },
                "elements": []
              }
            ]
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ID"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Escapse"
                },
                "elements": []
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "MacrosDeclareKind",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "text",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "Macros"
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "CharactersDeclareKind",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "text",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "Characters"
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "KeyedDeclareKind",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "text",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "PlainTextContnet"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "OtherDeclare",
      "hiddenTokens": [],
      "type": "Declare",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": "OtherDeclare",
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "KeyedDeclareKind"
              }
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Colon"
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "cardinality": "?",
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "PlainTextExpression"
                  }
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "LogicStatment",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "VarStatement"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "IfStatement"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ElseIfStatement"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ElseStatement"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "EndStatement"
                },
                "elements": []
              }
            ]
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "VarStatement",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Logic"
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "let"
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "expressions",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Variable"
              }
            },
            "cardinality": "+"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Comma"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "expressions",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Variable"
                  }
                },
                "cardinality": "+"
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "IfStatement",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Logic"
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "if"
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Expression"
              }
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "ElseIfStatement",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Logic"
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "elseif"
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Expression"
              }
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "ElseStatement",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Logic"
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "else"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "EndStatement",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Logic"
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "end"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Variable",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "VariableName"
              }
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "VariableInitial"
            },
            "cardinality": "?"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "VariableName",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "$",
                "elements": []
              },
              {
                "$type": "Keyword",
                "value": "%",
                "elements": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "ID"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "VariableInitial",
      "hiddenTokens": [],
      "fragment": true,
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Operator_Equal"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "initial",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "TopExpression"
              }
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "StoryBlock",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Dialog"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Action"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Dialog",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?",
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "TOKEN_AT"
            }
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$refText": "Character"
              },
              "terminal": {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "TextExpr"
                }
              }
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Paren_L"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "DialogModifier"
                  }
                },
                "cardinality": "+"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "Token_Comma"
                    },
                    "elements": []
                  },
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "WS"
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "elements",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "DialogModifier"
                      }
                    },
                    "cardinality": "+"
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Paren_R"
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Call"
                  }
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          },
          {
            "$type": "Assignment",
            "feature": "contents",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Content"
              }
            },
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "DialogModifier",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "ref",
        "operator": "=",
        "terminal": {
          "$type": "CrossReference",
          "type": {
            "$refText": "Modifier"
          },
          "terminal": {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "TextExpr"
            }
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Action",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "contents",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Content"
              }
            },
            "cardinality": "+",
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Content",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "content",
            "operator": "+=",
            "terminal": {
              "$type": "Alternatives",
              "elements": [
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Template"
                  },
                  "elements": []
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Label"
                  }
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Call"
                  }
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "ESCToken"
                  }
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Plain"
                  }
                }
              ]
            },
            "cardinality": "+",
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "pipe",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Pipe"
              }
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "EOL"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Label",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "text",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "LABEL_START"
              }
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "pipe",
            "operator": "=",
            "terminal": {
              "$type": "Alternatives",
              "elements": [
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "URL"
                  },
                  "elements": []
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "CallMacro"
                  }
                },
                {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "LabelContent"
                  }
                }
              ]
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Paren_R"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Call",
      "hiddenTokens": [],
      "type": "Call",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Bracket_L"
            },
            "elements": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": "AtInline",
                    "elements": []
                  },
                  {
                    "$type": "Assignment",
                    "feature": "isAt",
                    "operator": "?=",
                    "terminal": {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "TOKEN_AT"
                      }
                    }
                  },
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "WS"
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ref",
                    "operator": "=",
                    "terminal": {
                      "$type": "CrossReference",
                      "type": {
                        "$refText": "Character"
                      },
                      "terminal": {
                        "$type": "RuleCall",
                        "arguments": [],
                        "rule": {
                          "$refText": "TextExpr"
                        }
                      }
                    }
                  },
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "WS"
                    },
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": "Mark",
                    "elements": []
                  },
                  {
                    "$type": "Assignment",
                    "feature": "content",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "LabelContent"
                      }
                    }
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "CallMacro"
                    },
                    "cardinality": "?",
                    "elements": []
                  },
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "WS"
                    },
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Bracket_R"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "CallMacro",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "ref",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$refText": "Macro"
              },
              "terminal": {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ID"
                }
              }
            },
            "elements": []
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "MacroParam"
              }
            },
            "cardinality": "*"
          },
          {
            "$type": "Assignment",
            "feature": "pipe",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Pipe"
              }
            },
            "elements": [],
            "cardinality": "?"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "ESCToken",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "content",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Token_Bracket_L"
              }
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Bracket_R"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "LabelContent",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Escapse"
            },
            "elements": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "WS"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Escapse"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "ID"
                },
                "elements": []
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Pipe",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Logic"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": "TextPipe",
                    "elements": []
                  },
                  {
                    "$type": "Assignment",
                    "feature": "text",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "LabelContent"
                      }
                    }
                  },
                  {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "WS"
                    },
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": "MacroPipe",
                    "elements": []
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ref",
                    "operator": "=",
                    "terminal": {
                      "$type": "CrossReference",
                      "type": {
                        "$refText": "Macro"
                      },
                      "terminal": {
                        "$type": "RuleCall",
                        "arguments": [],
                        "rule": {
                          "$refText": "ID"
                        }
                      }
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "elements",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "MacroParam"
                      }
                    },
                    "cardinality": "*"
                  }
                ]
              }
            ],
            "cardinality": "?"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Template",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Template_L"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "expression",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Expression"
              }
            }
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "WS"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "pipe",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "arguments": [],
              "rule": {
                "$refText": "Pipe"
              }
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Token_Template_R"
            }
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Plain",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "content",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "PlainText"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "PlainText",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Space"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "RawText"
            },
            "elements": []
          }
        ],
        "cardinality": "+"
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Space",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "RuleCall",
        "arguments": [],
        "rule": {
          "$refText": "WS"
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "RawText",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "RawTextPiece"
            },
            "elements": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "RawTextPiece"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "TOKEN_AT"
                },
                "elements": []
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "RawTextPiece",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "StringContent"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "INLINE_COMMENT"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "TOKEN_AT",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "@",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_P",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": ".",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_Logic",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "|",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_Colon",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": ":",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_ListItem",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "-",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_Paren_L",
      "hiddenTokens": [],
      "fragment": true,
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "(",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_Paren_R",
      "hiddenTokens": [],
      "fragment": true,
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": ")",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_Bracket_L",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "[",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_Bracket_R",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "]",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_Template_L",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "{{",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_Template_R",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "}}",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Token_Comma",
      "hiddenTokens": [],
      "fragment": true,
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": ",",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_Equal",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "=",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_QuestionQuestion",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "??",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_And",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "&&",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_Or",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "||",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_MoreThen",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": ">",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_MoreThenEqual",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": ">=",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_LessThen",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "<",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_LessThenEqual",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "<=",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_EqualEqual",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "==",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_Division",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "*",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_Multiplication",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "/",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_Minus",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "-",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_Plus",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Keyword",
        "value": "+",
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Operator_Relaction",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Operator_MoreThen"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Operator_LessThen"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Operator_EqualEqual"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Operator_MoreThenEqual"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Operator_LessThenEqual"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Expression",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "RuleCall",
        "arguments": [],
        "rule": {
          "$refText": "Comma"
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Comma",
      "hiddenTokens": [],
      "type": "Expression",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Assign"
            },
            "elements": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": "Comma",
                "feature": "left",
                "operator": "=",
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Comma"
                }
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Assign"
                  }
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Assign",
      "hiddenTokens": [],
      "type": "Expression",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "TopExpression"
            },
            "elements": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": "Assign",
                "feature": "left",
                "operator": "=",
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Operator_Equal"
                }
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "TopExpression"
                  }
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "TopExpression",
      "hiddenTokens": [],
      "type": "Expression",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Logic"
            },
            "elements": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": "Comma",
                "feature": "left",
                "operator": "=",
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Operator_QuestionQuestion"
                  }
                }
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Logic"
                  }
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Logic",
      "hiddenTokens": [],
      "type": "Expression",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Relaction"
            },
            "elements": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": "Relaction",
                "feature": "left",
                "operator": "=",
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "Operator_And"
                      },
                      "elements": []
                    },
                    {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "Operator_Or"
                      }
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Relaction"
                  }
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Relaction",
      "hiddenTokens": [],
      "type": "Expression",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Addition"
            },
            "elements": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": "Relaction",
                "feature": "left",
                "operator": "=",
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Operator_Relaction"
                  }
                }
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Addition"
                  }
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Addition",
      "hiddenTokens": [],
      "type": "Expression",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Multiplication"
            },
            "elements": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": "Addition",
                "feature": "left",
                "operator": "=",
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "Operator_Plus"
                      },
                      "elements": []
                    },
                    {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "Operator_Minus"
                      }
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "Multiplication"
                  }
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Multiplication",
      "hiddenTokens": [],
      "type": "Expression",
      "alternatives": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "PrimaryExpression"
            },
            "elements": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": "Multiplication",
                "feature": "left",
                "operator": "=",
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "Operator_Multiplication"
                      },
                      "elements": []
                    },
                    {
                      "$type": "RuleCall",
                      "arguments": [],
                      "rule": {
                        "$refText": "Operator_Division"
                      }
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "arguments": [],
                  "rule": {
                    "$refText": "PrimaryExpression"
                  }
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "PrimaryExpression",
      "hiddenTokens": [],
      "type": "Expression",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Paren_L"
                },
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Expression"
                }
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "Token_Paren_R"
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": "RefExpression",
                "elements": []
              },
              {
                "$type": "Assignment",
                "feature": "ref",
                "operator": "=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$refText": "Variable"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "arguments": [],
                    "rule": {
                      "$refText": "VariableName"
                    }
                  }
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": "LiteralExpression",
                "elements": []
              },
              {
                "$type": "RuleCall",
                "arguments": [],
                "rule": {
                  "$refText": "LiteralExpression"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "LiteralExpression",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "BooleanLiteral"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "StringLiteral"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "NumberLiteral"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "StringLiteral",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "STRING"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "NumberLiteral",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "NUMBER"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "BooleanLiteral",
      "hiddenTokens": [],
      "alternatives": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "arguments": [],
          "rule": {
            "$refText": "BOOLEAN"
          }
        },
        "elements": []
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "StringContent",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "ID"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Escapse"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "Escapse",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "NUMBER"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "OTHER"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "ESC"
            },
            "elements": []
          }
        ]
      }
    },
    {
      "$type": "ParserRule",
      "parameters": [],
      "name": "TextExpr",
      "hiddenTokens": [],
      "type": "string",
      "alternatives": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "ID"
            },
            "elements": []
          },
          {
            "$type": "RuleCall",
            "arguments": [],
            "rule": {
              "$refText": "Escapse"
            },
            "elements": []
          }
        ],
        "cardinality": "+"
      }
    },
    {
      "$type": "TerminalRule",
      "name": "EOL",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\r?\\\\n",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "WS",
      "terminal": {
        "$type": "RegexToken",
        "regex": " +",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "URL",
      "terminal": {
        "$type": "RegexToken",
        "regex": "(https?|ftp|file):\\\\/\\\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "BOOLEAN",
      "type": "boolean",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\b(true|false)\\\\b",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "ID",
      "type": "string",
      "terminal": {
        "$type": "RegexToken",
        "regex": "[_a-zA-Z][\\\\w_]*",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "NUMBER",
      "type": "number",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\d+(\\\\.\\\\d+)?(?=[+\\\\-*\\\\/=><!\\\\]}\\\\)|, \\\\n\\\\r])",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "LABEL_START",
      "type": "string",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\[((\\\\\\\\\\\\S|(?!\\\\]).)+?\\\\]*)\\\\](?=\\\\()",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "STRING",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\"((\\\\\\\\.)|[^\\"])*\\"|'((\\\\\\\\.)|[^'])*'",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "ESC",
      "terminal": {
        "$type": "RegexToken",
        "regex": "(\\\\\\\\\\\\S)+",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "OTHER",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\S",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "name": "INLINE_COMMENT",
      "terminal": {
        "$type": "RegexToken",
        "regex": "(?!\\\\\\\\)\\\\[\\\\[.+?\\\\]\\\\]",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "ML_COMMENT",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/\\\\r?\\\\n?",
        "elements": []
      }
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "SL_COMMENT",
      "terminal": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/[^\\\\n\\\\r]*\\\\r?\\\\n?",
        "elements": []
      }
    }
  ],
  "name": "Advscript"
}`));
